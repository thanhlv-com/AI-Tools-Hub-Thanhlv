{
  "common": {
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "cancel": "Cancel",
    "save": "Save",
    "copy": "Copy",
    "copied": "Copied!",
    "clear": "Clear",
    "search": "Search",
    "filter": "Filter",
    "export": "Export",
    "import": "Import",
    "delete": "Delete",
    "edit": "Edit",
    "close": "Close",
    "select": "Select",
    "poweredBy": "Powered by ChatGPT"
  },
  "nav": {
    "appTitle": "AI Tools Hub",
    "ddlCompare": "DDL Compare",
    "ddlCompareDesc": "Compare and generate DDL migrations",
    "translation": "Translation",
    "translationDesc": "Multi-language AI translation",
    "textRewriting": "Text Rewriting",
    "textRewritingDesc": "Rewrite text with different styles and tones",
    "promptGenerator": "Prompt Generator",
    "promptGeneratorDesc": "Generate structured AI prompts",
    "capacityAnalysis": "Capacity Analysis", 
    "capacityAnalysisDesc": "Database capacity analysis",
    "diagram": "Diagram Generator",
    "diagramDesc": "Create professional diagrams with AI",
    "wikiGeneration": "Wiki Generator",
    "wikiGenerationDesc": "Generate Confluence wiki documents",
    "settings": "Settings",
    "settingsDesc": "Server and API configuration"
  },
  "ddl": {
    "title": "DDL Schema Comparison",
    "description": "Compare two DDL schemas and generate migration script using AI",
    "currentDDL": "Current DDL Schema",
    "currentDDLPlaceholder": "Paste your current DDL schema here...",
    "targetDDL": "Target DDL Schema", 
    "targetDDLPlaceholder": "Paste your target DDL schema here...",
    "databaseType": "Database Type",
    "selectDatabase": "Select database type",
    "analyze": "Analyze Schemas",
    "analyzing": "Analyzing schemas...",
    "result": "Migration Script",
    "noResult": "No migration script generated yet. Please provide DDL schemas and click 'Analyze Schemas'.",
    "copyScript": "Copy Script",
    "scriptCopied": "Migration script copied to clipboard!",
    "error": "Error analyzing schemas. Please check your configuration and try again.",
    "missingFields": "Please fill in both DDL schemas and select a database type.",
    "history": "Analysis History",
    "noHistory": "No analysis history yet.",
    "loadFromHistory": "Load from History"
  },
  "translation": {
    "title": "AI Translation", 
    "description": "Translate text to multiple languages with different styles using AI",
    "sourceText": "Source Text",
    "sourceTextPlaceholder": "Enter text to translate...",
    "sourceLanguage": "Source Language",
    "targetLanguages": "Target Languages", 
    "translationStyle": "Translation Style",
    "selectLanguages": "Select languages",
    "selectStyle": "Select translation style",
    "translate": "Translate",
    "translating": "Translating...",
    "results": "Translation Results",
    "noResults": "No translation results yet. Enter text and select target languages.",
    "characterCount": "{{count}} characters",
    "copyTranslation": "Copy Translation",
    "translationCopied": "Translation copied to clipboard!",
    "swapLanguages": "Swap Languages",
    "clearText": "Clear Text",
    "error": "Translation error. Please check your configuration and try again.",
    "missingFields": "Please enter text to translate and select target languages.",
    "history": "Translation History",
    "noHistory": "No translation history yet.",
    "loadFromHistory": "Load from History",
    "autoDetect": "Auto Detect",
    "missingText": "Missing text",
    "missingTextDesc": "Please enter text to translate.",
    "duplicateLanguage": "Duplicate languages",
    "duplicateLanguageDesc": "Source and target languages cannot be the same.",
    "noApiKey": "API Key not configured",
    "noApiKeyDesc": "Please go to Settings to enter ChatGPT API Key.",
    "successCount": "Successfully translated {{count}}/{{total}} languages using {{model}}",
    "translationError": "Translation error",
    "cannotSwap": "Cannot swap",
    "cannotSwapDesc": "Cannot swap when auto-detect is selected as source language.",
    "retryTranslation": "Retry translation",
    "retrySuccess": "Retry successful",
    "retryFailed": "Retry failed",
    "preferences": "Translation Preferences",
    "advancedSettings": "Advanced Settings",
    "proficiency": "Proficiency Level",
    "emoticons": "Emoticons",
    "selectProficiency": "Select proficiency level",
    "selectEmoticons": "Select emoticon style",
    "translateButton": "Translate Text",
    "modelSummary": "Model & Summary",
    "aiModel": "AI Model",
    "model": "Model",
    "examples": "Examples",
    "exampleText1": "Hello, how are you today?",
    "exampleText2": "This is a test text",
    "exampleText3": "Hello, how are you?",
    "exampleText4": "Hello, how are you?",
    "configureApiKey": "API Key not configured",
    "configureApiKeyDesc": "Please go to Settings page to enter ChatGPT API Key before use.",
    "configuration": "Configuration",
    "sourceLabel": "Source",
    "targetLabel": "Target ({{count}})",
    "styleLabel": "Style",
    "proficiencyLabel": "Proficiency",
    "emoticonLabel": "Emoticons",
    "currentConfig": "Current Configuration",
    "translationSummary": "Translation Summary",
    "timeLabel": "Time",
    "closeButton": "Close",
    "translationConfig": "Translation Configuration",
    "translationConfigDesc": "Customize languages, styles and AI model for translation",
    "translationHistory": "Translation History",
    "translationResults": "Translations",
    "translationResultsDesc": "Translation results will appear here...",
    "loadedFromHistory": "Loaded from history",
    "loadedFromHistoryDesc": "Loaded data from: {{title}}",
    "preferenceConfig": "Preference Configuration",
    "copyAll": "Copy all",
    "emoticonFrequencyLabel": "Emoticon Frequency",
    "selectEmoticonFrequency": "Select emoticon frequency"
  },
  "translationHistory": {
    "title": "Translation History",
    "description": "Review and reuse previous translations",
    "itemCount": "{{count}} items",
    "searchPlaceholder": "Search in translation history...",
    "filterAll": "All styles",
    "sortNewest": "Newest",
    "sortOldest": "Oldest",
    "export": "Export",
    "clearAll": "Clear all",
    "noHistory": {
      "title": "No translation history yet",
      "description": "Perform translations to start building history"
    },
    "noResults": {
      "title": "No matching results found",
      "description": "Try changing search keywords or filters"
    },
    "item": {
      "reload": "Reload",
      "sourceText": "Source text ({{flag}} {{name}})",
      "translations": "Translations ({{count}} languages)",
      "languageCount": "{{count}} languages",
      "sourceLength": "Source: {{length}} characters"
    }
  },
  "textRewriting": {
    "title": "AI Text Rewriting",
    "description": "Rewrite your text with different styles, tones, and complexity levels using AI",
    "originalText": "Original Text",
    "originalTextPlaceholder": "Enter your text here...",
    "rewrittenText": "Rewritten Text",
    "rewrittenTextPlaceholder": "Your rewritten text will appear here...",
    "writingStyle": "Writing Style",
    "writingTone": "Writing Tone",
    "writingLength": "Length",
    "writingComplexity": "Complexity",
    "outputLanguage": "Output Language",
    "customInstructions": "Custom Instructions",
    "customInstructionsPlaceholder": "Add any specific instructions for rewriting...",
    "selectStyle": "Select writing style",
    "selectTone": "Select tone",
    "selectLength": "Select length",
    "selectComplexity": "Select complexity",
    "selectOutputLanguage": "Select output language",
    "rewrite": "Rewrite Text",
    "rewriting": "Rewriting...",
    "rewriteButton": "Rewrite Text",
    "results": "Rewriting Results",
    "noResults": "No rewriting results yet. Enter text and configure settings.",
    "characterCount": "{{count}} characters",
    "copyText": "Copy Text",
    "textCopied": "Text copied to clipboard!",
    "error": "Rewriting error. Please check your configuration and try again.",
    "missingText": "Missing text",
    "missingTextDesc": "Please enter text to rewrite.",
    "noApiKey": "API Key not configured",
    "noApiKeyDesc": "Please go to Settings to enter ChatGPT API Key.",
    "configureApiKey": "Configure API Key",
    "configureApiKeyDesc": "Please set up your OpenAI API key in Settings to use text rewriting.",
    "rewritingError": "Rewriting Error",
    "rewritingSummary": "Rewriting Summary",
    "rewritingConfig": "Rewriting Configuration",
    "rewritingConfigDesc": "Configure how you want your text to be rewritten",
    "styleAndTone": "Writing Style & Tone",
    "lengthAndComplexity": "Length & Complexity",
    "modelAndInstructions": "Model & Instructions",
    "currentConfig": "Current Config",
    "aiModel": "AI Model",
    "model": "Model",
    "style": "Style",
    "tone": "Tone",
    "length": "Length",
    "complexity": "Complexity",
    "language": "Language",
    "history": "History",
    "examples": "Examples",
    "exampleText1": "Email drafts",
    "exampleText2": "Social media posts",
    "exampleText3": "Blog articles",
    "exampleText4": "Product descriptions",
    "exampleText5": "Meeting notes",
    "exampleText6": "Documentation",
    "styleAndToneLabel": "Writing Style & Tone",
    "lengthAndComplexityLabel": "Length & Complexity",
    "modelAndInstructionsLabel": "Model & Instructions",
    "styleLabel": "Style",
    "toneLabel": "Tone",
    "lengthLabel": "Length",
    "complexityLabel": "Complexity",
    "selectStyle": "Select writing style",
    "selectTone": "Select tone",
    "selectLength": "Select length",
    "selectComplexity": "Select complexity",
    "searchStyles": "Search styles...",
    "searchTones": "Search tones...",
    "searchLengths": "Search lengths...",
    "searchComplexity": "Search complexity...",
    "customInstructionsOptional": "Custom Instructions (Optional)",
    "currentConfig": "Current Config",
    "originalTextTitle": "Original Text",
    "originalTextDesc": "Enter the text you want to rewrite",
    "originalTextPlaceholder": "Enter your text here...\n\nExamples:\n- Email drafts\n- Social media posts\n- Blog articles\n- Product descriptions\n- Meeting notes\n- Documentation",
    "charactersCount": "characters",
    "copy": "Copy",
    "rewrittenTextTitle": "Rewritten Text",
    "rewrittenTextDesc": "AI-generated rewritten version of your text",
    "rewrittenTextPlaceholder": "Your rewritten text will appear here",
    "rewrittenTextHint": "Configure your settings and click \"Rewrite Text\" to begin",
    "ofOriginal": "% of original",
    "configureApiKey": "Configure API Key",
    "configureApiKeyDesc": "Please set up your OpenAI API key in Settings to use text rewriting.",
    "rewriting": "Rewriting...",
    "rewriteText": "Rewrite Text",
    "errorTitle": "Error",
    "close": "Close",
    "rewritingSummary": "Rewriting Summary",
    "styleField": "Style:",
    "toneField": "Tone:",
    "lengthField": "Length:",
    "modelField": "Model:",
    "originalField": "Original:",
    "rewrittenField": "Rewritten:",
    "chars": "chars",
    "textRewrittenSuccess": "Text rewritten successfully using",
    "unknownError": "Unknown error"
  },
  "writingStyles": {
    "professional": "Professional",
    "casual": "Casual",
    "academic": "Academic",
    "creative": "Creative",
    "technical": "Technical",
    "marketing": "Marketing",
    "journalistic": "Journalistic",
    "storytelling": "Storytelling"
  },
  "writingStyleDescriptions": {
    "professional": "Clear, formal, and business-appropriate tone",
    "casual": "Relaxed, conversational, and friendly tone",
    "academic": "Scholarly, research-oriented, and formal style",
    "creative": "Imaginative, engaging, and expressive writing",
    "technical": "Precise, detailed, and specification-focused",
    "marketing": "Persuasive, compelling, and action-oriented",
    "journalistic": "Objective, factual, and news-style reporting",
    "storytelling": "Narrative-driven, engaging, and descriptive"
  },
  "writingTones": {
    "neutral": "Neutral",
    "friendly": "Friendly",
    "authoritative": "Authoritative",
    "enthusiastic": "Enthusiastic",
    "empathetic": "Empathetic",
    "humorous": "Humorous",
    "urgent": "Urgent",
    "inspirational": "Inspirational"
  },
  "writingToneDescriptions": {
    "neutral": "Balanced and objective tone",
    "friendly": "Warm, welcoming, and approachable",
    "authoritative": "Confident, expert, and commanding",
    "enthusiastic": "Energetic, excited, and passionate",
    "empathetic": "Understanding, caring, and supportive",
    "humorous": "Light-hearted, witty, and entertaining",
    "urgent": "Immediate, pressing, and time-sensitive",
    "inspirational": "Motivating, uplifting, and encouraging"
  },
  "writingLengths": {
    "much-shorter": "Much Shorter",
    "shorter": "Shorter",
    "same": "Same Length",
    "longer": "Longer",
    "much-longer": "Much Longer"
  },
  "writingLengthDescriptions": {
    "much-shorter": "Significantly condense the content (50% or less)",
    "shorter": "Condense the content (about 75% of original)",
    "same": "Keep approximately the same length",
    "longer": "Expand the content (about 125% of original)",
    "much-longer": "Significantly expand the content (150% or more)"
  },
  "writingComplexities": {
    "simple": "Simple",
    "moderate": "Moderate",
    "advanced": "Advanced",
    "expert": "Expert"
  },
  "writingComplexityDescriptions": {
    "simple": "Easy to understand, basic vocabulary",
    "moderate": "Balanced complexity, accessible to most readers",
    "advanced": "Sophisticated language, specialized terminology",
    "expert": "Highly technical, industry-specific language"
  },
  "settings": {
    "title": "Configuration Settings",
    "description": "Configure ChatGPT API and other settings",
    "chatgptConfig": "ChatGPT Configuration", 
    "apiKey": "API Key",
    "apiKeyPlaceholder": "Enter your ChatGPT API key...",
    "serverUrl": "Server URL",
    "serverUrlPlaceholder": "https://api.openai.com/v1",
    "defaultModel": "Default Model",
    "selectModel": "Select default model",
    "testConnection": "Test Connection",
    "testing": "Testing connection...",
    "connectionSuccess": "Connection successful!",
    "connectionError": "Connection failed. Please check your settings.",
    "saveConfig": "Save Configuration",
    "configSaved": "Configuration saved successfully!",
    "language": "Language",
    "selectLanguage": "Select language"
  },
  "models": {
    "gpt-4": "GPT-4",
    "gpt-4-turbo": "GPT-4 Turbo", 
    "gpt-4o": "GPT-4o",
    "gpt-4o-mini": "GPT-4o Mini",
    "gpt-3.5-turbo": "GPT-3.5 Turbo"
  },
  "languages": {
    "auto": "Auto Detect",
    "en": "English",
    "vi": "Vietnamese", 
    "zh": "Chinese (Simplified)",
    "zh-TW": "Chinese (Traditional)",
    "ja": "Japanese",
    "ko": "Korean",
    "th": "Thai",
    "id": "Indonesian",
    "ms": "Malay",
    "tl": "Filipino",
    "fr": "French",
    "de": "German", 
    "es": "Spanish",
    "it": "Italian",
    "pt": "Portuguese",
    "ru": "Russian",
    "ar": "Arabic",
    "hi": "Hindi",
    "bn": "Bengali",
    "ur": "Urdu",
    "tr": "Turkish",
    "pl": "Polish",
    "nl": "Dutch",
    "sv": "Swedish",
    "da": "Danish",
    "no": "Norwegian",
    "fi": "Finnish",
    "he": "Hebrew"
  },
  "translationStyles": {
    "natural": "Natural",
    "formal": "Formal", 
    "casual": "Casual",
    "literal": "Literal",
    "creative": "Creative",
    "technical": "Technical",
    "poetic": "Poetic", 
    "commercial": "Commercial",
    "academic": "Academic",
    "news": "News"
  },
  "translationProficiencies": {
    "beginner": "Beginner",
    "elementary": "Elementary",
    "intermediate": "Intermediate",
    "advanced": "Advanced",
    "native": "Native",
    "child-friendly": "Child-friendly"
  },
  "translationStyleDescriptions": {
    "natural": "Translate naturally and fluently, suitable for everyday contexts. Prioritizes flow and readability. 😊",
    "formal": "Translate in a formal, polite style, suitable for work, academic, or official texts. 🎩",
    "casual": "Translate in a friendly, casual style, suitable for everyday conversations or personal messages. 😄",
    "literal": "Translate as close to the original meaning as possible, preserving structure and every word. Suitable for technical documents. 📝",
    "creative": "Translate creatively and flexibly, adapting expressions to fit the target culture. Suitable for marketing content. 🎨",
    "technical": "Translate specialized technical content, preserving professional terminology with high accuracy. Suitable for IT and scientific documents. ⚙️",
    "poetic": "Translate literature and poetry, focusing on rhythm, rhyme, and emotion. Suitable for artistic works. 🎭",
    "commercial": "Translate for commercial purposes, marketing, and sales. Focus on persuasiveness and customer appeal. 💼",
    "academic": "Translate in an academic, scientific style, using precise terminology and clear logical structure. 🎓",
    "news": "Translate in journalistic style, neutral, objective, concise, and easy to understand for the general public. 📰"
  },
  "emoticonOptions": {
    "keep-original": "Keep Original",
    "add-contextual": "Add Contextual",
    "remove-all": "Remove All",
    "localize": "Localize",
    "enhance-emotional": "Enhance Emotional",
    "minimal-subtle": "Minimal Subtle",
    "youth-friendly": "Youth-friendly",
    "professional-warm": "Professional Warm",
    "kawaii-cute": "Kawaii Cute",
    "text-emoticons": "Text Emoticons",
    "gender-neutral": "Gender Neutral",
    "seasonal-themed": "Seasonal Themed"
  },
  "emoticonOptionDescriptions": {
    "keep-original": "Keep all existing emoticons/emojis from the original text without adding or changing them 🔄",
    "add-contextual": "Add emoticons/emojis that match the content and emotions of the text to increase liveliness 😊✨",
    "remove-all": "Remove all emoticons/emojis to create clean, formal text 🚫",
    "localize": "Replace emoticons/emojis with symbols appropriate for the target language culture 🌍",
    "enhance-emotional": "Add many emoticons/emojis to highlight and amplify emotions in the text 💫❤️",
    "minimal-subtle": "Only add a few subtle emoticons/emojis, suitable for gentle style ✨",
    "youth-friendly": "Use trendy, modern emoticons/emojis suitable for young people 🤩🔥",
    "professional-warm": "Balance professionalism and friendliness with moderate emoticons/emojis 🤝😊",
    "kawaii-cute": "Use Japanese kawaii-style emoticons/emojis, focusing on cuteness 🥰💖",
    "text-emoticons": "Convert emojis to ASCII text emoticons like :) ^_^ ¯\\_(ツ)_/¯ :-)",
    "gender-neutral": "Prioritize gender-neutral and inclusive emoticons/emojis 🙂👥",
    "seasonal-themed": "Add emoticons/emojis appropriate for the current season or special occasions 🌸🎄"
  },
  "emoticonFrequencies": {
    "never": "Never",
    "very-rare": "Very Rare",
    "rare": "Rare",
    "occasional": "Occasional",
    "moderate": "Moderate",
    "frequent": "Frequent",
    "very-frequent": "Very Frequent",
    "maximum": "Maximum"
  },
  "emoticonFrequencyDescriptions": {
    "never": "Don't add new emoticons/emojis. Only keep what's already in the original text. 🚫",
    "very-rare": "Only add emoticons/emojis when really necessary to clarify meaning or avoid misunderstanding. ⚪",
    "rare": "Add emoticons/emojis sparingly, only in the most important cases. 🔵",
    "occasional": "Add emoticons/emojis occasionally to make text more lively while maintaining professionalism. 🟡",
    "moderate": "Balance between adding emoticons/emojis and keeping text natural. Moderate level. 🟠",
    "frequent": "Add emoticons/emojis fairly often to create lively and friendly text. 🟢",
    "very-frequent": "Use emoticons/emojis frequently to create very lively text with rich emotions. 🔴",
    "maximum": "Add emoticons/emojis whenever possible to achieve maximum liveliness and emotion. 🌈✨"
  },
  "translationPreferences": {
    "title": "Translation Preferences",
    "description": "Save and manage your frequently used translation configurations",
    "itemCount": "{{count}} configurations",
    "createNew": "Create New",
    "saveFromCurrent": "Save Current",
    "createNewPreference": "Create New Configuration",
    "preferenceNameLabel": "Configuration Name *",
    "preferenceNamePlaceholder": "e.g. Technical Translation EN→VI",
    "preferenceDescLabel": "Description",
    "preferenceDescPlaceholder": "Brief description of the configuration",
    "languageSettings": "Language",
    "sourceLanguageLabel": "Source Language",
    "sourceLanguagePlaceholder": "Select source language...",
    "targetLanguagesLabel": "Target Languages ({{count}})",
    "targetLanguagePlaceholder": "Select language...",
    "aiSettings": "AI Configuration",
    "translationStyleLabel": "Translation Style",
    "translationStylePlaceholder": "Select translation style...",
    "emoticonProcessingLabel": "Emoticon Processing",
    "emoticonProcessingPlaceholder": "Select emoticon processing...",
    "modelLabel": "Model (optional)",
    "cancel": "Cancel",
    "saveConfiguration": "Save Configuration",
    "noConfigurations": "No configurations yet",
    "noConfigurationsDesc": "Create your first configuration to get started",
    "apply": "Apply",
    "languageDetails": "Language Details",
    "sourceDetail": "Source: ",
    "targetDetail": "Target: ",
    "aiConfig": "AI Configuration",
    "styleDetail": "Style: ",
    "emoticonDetail": "Emoticon: ",
    "modelDetail": "Model: ",
    "createdDetail": "Created: ",
    "defaultModel": "Default",
    "nameRequired": "Name is required",
    "nameRequiredDesc": "Please enter a name for the configuration.",
    "configurationSaved": "Configuration saved",
    "configurationSavedDesc": "Configuration \"{{name}}\" has been saved successfully.",
    "saveError": "Save configuration error",
    "saveErrorDesc": "Unable to save configuration. Please try again.",
    "autoSaveTimestamp": "Configuration {{timestamp}}",
    "autoSaveDesc": "Auto-saved from current settings",
    "configurationApplied": "Configuration applied",
    "configurationAppliedDesc": "Configuration \"{{name}}\" has been applied.",
    "configurationDeleted": "Configuration deleted",
    "configurationDeletedDesc": "Configuration \"{{name}}\" has been deleted."
  },
  "settingsHardcoded": {
    "modelParameters": "Model Parameters",
    "modelParametersDesc": "Adjust parameters to optimize DDL analysis results",
    "maxTokens": "Max Tokens",
    "maxTokensDesc": "Maximum tokens for response",
    "temperature": "Temperature",
    "temperatureDesc": "Creativity level (0.0 - 2.0)",
    "modelManagement": "Model Management",
    "modelManagementDesc": "Load, store and verify availability of AI models",
    "cachedModels": "Models saved in cache",
    "modelCount": "Number of models: ",
    "lastUpdated": "Last updated: ",
    "noUpdate": "None",
    "actions": "Actions",
    "reloadModels": "Reload Models",
    "loading": "Loading...",
    "verifyModels": "Verify Models (API Test)",
    "verifying": "Verifying...",
    "testing": "Testing {{current}}/{{total}}...",
    "verificationResults": "Verification Results",
    "failedModels": "Models that failed API test and have been removed:",
    "failedModelsDesc": "These models cannot perform API calls and may not be supported or have restricted access.",
    "allModelsValid": "All {{count}} models passed API test successfully!",
    "allModelsValidDesc": "These models can be used normally for translation and DDL analysis.",
    "instructions": "Instructions:",
    "reloadModelsInstr": "Reload Models: Get new models list from server and save to localStorage",
    "verifyModelsInstr": "Verify Models (API Test): Perform actual API calls to test each model",
    "autoRemoveInstr": "Models that don't pass API test will be automatically removed from cache",
    "verificationTimeInstr": "Verification process may take several minutes and use some API tokens",
    "periodicVerificationInstr": "Should verify models periodically to ensure they work correctly",
    "queueConfig": "Request Queue Configuration",
    "queueConfigDesc": "Control API request queue to avoid rate limiting and manage resources",
    "enableQueue": "Enable Queue System",
    "enableQueueDesc": "Activate sequential queue for API requests",
    "delayBetweenRequests": "Delay between requests (ms)",
    "delayBetweenRequestsDesc": "Wait time between API requests (0-5000ms)",
    "maxConcurrentRequests": "Maximum concurrent requests",
    "maxConcurrentRequestsDesc": "Number of requests that can run in parallel (1-10)",
    "recommendedConfig": "Recommended configuration:",
    "openaiConfig": "OpenAI API: Delay 500ms, Max 1 concurrent",
    "localConfig": "Local/Self-hosted: Delay 100ms, Max 3-5 concurrent",
    "rateLimitedConfig": "Rate-limited APIs: Delay 1000ms+, Max 1 concurrent",
    "unsavedChanges": "Unsaved changes",
    "saved": "Saved",
    "testConnection": "Test Connection",
    "testing": "Testing...",
    "undo": "Undo",
    "saving": "Saving...",
    "saveChanges": "Save Changes"
  },
  "notFound": {
    "title": "Page Not Found",
    "description": "The page you are looking for does not exist",
    "pathNotFound": "Path {{path}} was not found.",
    "backHome": "Back to Home"
  },
  "prompts": {
    "title": "Prompt Generation",
    "description": "Generate detailed prompts or specialized prompts for Claude AI",
    "generate": "Generate Prompt",
    "generating": "Generating...",
    "result": "Generated Prompt",
    "detailedPrompt": {
      "title": "Generate Detailed Prompt",
      "description": "Enter a simple description, AI will generate a complete prompt in your chosen format",
      "outputFormat": "Output Format:",
      "plainText": "Plain Text",
      "jsonPrompt": "JSON Prompt",
      "plainTextDesc": "📝 Generate structured detailed prompt with guiding questions",
      "jsonDesc": "📋 Generate JSON prompt with complete structure and required fields",
      "inputLabel": "Brief description of the topic you want to create a prompt for:",
      "inputPlaceholder": "Enter brief description...\n\nExamples:\n- explain pod in k8s in detail\n- write marketing email for new product\n- analyze monthly sales data\n- create JavaScript function for sorting array\n- explain machine learning for beginners",
      "characterCount": "{{count}} characters",
      "modelLabel": "AI Model",
      "generateButton": "Generate {{format}} Prompt",
      "generatingText": "Generating...",
      "resultLabel": "Generated {{format}} Prompt:",
      "resultDesc": "💡 This {{format}} can be used directly with AI systems or copy individual fields",
      "resultDescPlain": "💡 This prompt can be used directly with ChatGPT or other AI"
    },
    "claudePrompt": {
      "title": "Generate Prompt for Claude",
      "description": "Enter your request, AI will generate an optimized prompt to send to Claude",
      "inputLabel": "Request/Task you want Claude to perform:",
      "inputPlaceholder": "Enter detailed request...\n\nExamples:\n- Write a Python function to process CSV data\n- Explain machine learning concepts for beginners\n- Create an HTML/CSS landing page for tech startup\n- Analyze and optimize JavaScript code snippet\n- Write professional email to customers",
      "generateButton": "Generate Prompt for Claude",
      "resultLabel": "Generated Prompt for Claude:",
      "resultDesc": "🤖 This prompt is optimized for use with Claude AI. You can copy and paste it directly into Claude."
    },
    "todoTasks": {
      "title": "Generate Todos & Tasks for AI Agent",
      "description": "Enter a simple request, AI will convert it into specific todos and tasks that AI agents can execute automatically and efficiently",
      "inputLabel": "Request/Task for AI Agent:",
      "inputPlaceholder": "Enter task for AI agent to perform...\n\nExamples:\n- Analyze and improve React application performance\n- Automatically refactor code to follow best practices\n- Create complete test cases for API endpoints\n- Optimize database queries and indexes\n- Implement CI/CD pipeline with automated testing",
      "generateButton": "Generate Todos & Tasks for AI Agent",
      "generatingText": "Generating todos...",
      "resultLabel": "Todos & Tasks List for AI Agent:",
      "resultDesc": "🤖 This list includes todos and tasks optimized for AI agents. Each task is described in detail with clear instructions so AI can execute automatically and accurately."
    },
    "tabs": {
      "detailed": "Detailed Prompt",
      "claude": "Claude Prompt",
      "todos": "AI Todos & Tasks"
    },
    "common": {
      "copy": "Copy",
      "apiKeyWarning": "API Key not configured",
      "apiKeyWarningDesc": "Please go to Settings page to enter ChatGPT API Key before use.",
      "copied": "Copied",
      "copiedDesc": "Content has been copied to clipboard.",
      "missingInfo": "Missing information",
      "errorGenerating": "Error generating detailed prompt",
      "errorGeneratingClaude": "Error generating Claude prompt",
      "errorGeneratingTodo": "Error generating todos and tasks",
      "unknownError": "Unknown error",
      "successGenerated": "Detailed prompt has been generated",
      "successGeneratedDesc": "Successfully generated {{format}} prompt from: \"{{input}}...\"",
      "successGeneratedClaude": "Claude prompt has been generated",
      "successGeneratedClaudeDesc": "Successfully generated Claude prompt from: \"{{input}}...\"",
      "successGeneratedTodo": "Todos and Tasks have been generated",
      "successGeneratedTodoDesc": "Successfully generated todos list from: \"{{input}}...\"",
      "missingDetailedInput": "Please enter description to generate detailed prompt.",
      "missingClaudeInput": "Please enter request to generate Claude prompt.",
      "missingTodoInput": "Please enter request to generate todos and tasks."
    },
    "examples": {
      "title": "Example Library",
      "description": "3 detailed JSON prompt examples for common use cases",
      "blogTitle": "Create Blog Content",
      "blogDesc": "Prompt for creating professional blog posts with SEO optimization",
      "blogUseCase": "Content Marketing, Blogging, SEO",
      "codeTitle": "Code Analysis",
      "codeDesc": "Prompt for reviewing and analyzing code with improvement suggestions",
      "codeUseCase": "Code Review, Debugging, Best Practices",
      "translationTitle": "Translation and Rewriting",
      "translationDesc": "Prompt for professional translation and content rewriting",
      "translationUseCase": "Translation, Content Adaptation, Localization",
      "highlights": "Highlights:",
      "goal": "Goal:",
      "audience": "Audience:",
      "format": "Format:",
      "constraints": "Constraints:",
      "constraintsCount": "{{count}} conditions",
      "loadToForm": "Load to Form",
      "copyJson": "Copied JSON!",
      "copyJsonDesc": "JSON example has been copied to clipboard",
      "copyError": "Copy error",
      "copyErrorDesc": "Cannot copy to clipboard"
    }
  },
  "capacity": {
    "title": "DDL Capacity Analysis",
    "description": "AI automatically calculates average and maximum record sizes, estimating total database capacity",
    "workflowMode": {
      "title": "Analysis Mode",
      "description": "Choose the capacity analysis method that fits your needs",
      "classic": {
        "title": "Quick Analysis",
        "description": "Single-step analysis, fast but may be less accurate"
      },
      "threeStep": {
        "title": "3-Step Analysis",
        "description": "Structure analysis → Edit → High-precision calculation"
      }
    },
    "workflowProgress": {
      "title": "3-Step Analysis Progress",
      "steps": {
        "ddlInput": "Input DDL",
        "structureAnalysis": "Structure Analysis",
        "finalCalculation": "Capacity Calculation"
      },
      "stepNumber": "Step {{number}}",
      "restart": "Start Over"
    },
    "input": {
      "title": "DDL Schema Information",
      "description": "AI will automatically analyze and calculate average and maximum record sizes",
      "databaseType": "Database Type",
      "ddlSchema": "DDL Schema",
      "ddlPlaceholder": "Enter DDL schema (CREATE TABLE statements)...",
      "recordCount": "Expected Record Count",
      "recordCountHelper": "{{count}} records",
      "recordCountHint": "Hint: 1K = 1,000 | 1M = 1,000,000",
      "recordCountWarningSmall": "⚠️ Very small record count may give inaccurate results",
      "recordCountWarningLarge": "📊 Very large record count - analysis may take longer",
      "analysisMethod": "Analysis Method",
      "multiCall": "Multiple AI Calls",
      "singleCall": "Single AI Call",
      "multiCallDesc": "Detailed analysis with multiple separate AI calls (more accurate, takes more time)",
      "singleCallDesc": "Quick analysis with single AI call (faster, less detailed)",
      "multiCallNote": "🔄 Multi-call mode will automatically retry every 5 seconds until successful. The system will not stop until analysis is complete."
    },
    "progress": {
      "title": "Analysis Progress",
      "retryTitle": "Retrying (attempt {{count}})",
      "retryBadge": "Retry",
      "completed": "{{progress}}% complete",
      "retryCount": "Retried {{count}} times",
      "retryNote": "🔄 System is automatically retrying (every 5 seconds) until successful. Please be patient...",
      "preparing": "Preparing...",
      "singleCallStep": "Analyzing with single API call..."
    },
    "buttons": {
      "analyze": "Analyze",
      "analyzing": "Analyzing...",
      "analyzeDetailed": "Detailed Analysis (Multiple AI Calls)",
      "analyzeQuick": "Quick Analysis (Single AI Call)",
      "analyzeStructure": "Analyze DDL Structure",
      "analyzingStructure": "Analyzing structure...",
      "calculateCapacity": "Calculate Accurate Capacity",
      "calculating": "Calculating...",
      "history": "History",
      "showFieldDetails": "Show Field Details",
      "hideFieldDetails": "Hide Field Details",
      "showOverhead": "Show Overhead",
      "hideOverhead": "Hide Overhead"
    },
    "threeStepWorkflow": {
      "step1": {
        "title": "Step 1: Input DDL Schema",
        "description": "Enter DDL schema to start analyzing database structure"
      },
      "step2": {
        "title": "Step 2: Review and Edit Structure",
        "description": "AI has analyzed the DDL structure. You can review and edit before calculating capacity",
        "summary": {
          "tables": "Tables",
          "fields": "Fields",
          "confidence": "Confidence"
        },
        "fieldLabels": {
          "averageSize": "Avg Size",
          "maximumSize": "Max Size",
          "nullable": "Nullable",
          "primaryKey": "PK"
        },
        "warnings": "⚠️ Warnings",
        "suggestions": "💡 Suggestions"
      }
    },
    "errors": {
      "missingDDL": "Please enter DDL schema.",
      "invalidRecordCount": "Please enter a valid record count.",
      "missingApiKey": "Please go to Settings to enter ChatGPT API Key.",
      "invalidResult": "Invalid analysis result from AI",
      "unknownError": "Unknown error",
      "jsonFormatError": "AI returned incorrectly formatted result. System automatically retried every 5 seconds but still failed.",
      "authError": "API authentication error. Please check API Key in Settings.",
      "rateLimitError": "API rate limit exceeded. System will automatically retry every 5 seconds until successful.",
      "timeoutError": "Connection timeout. System automatically retries every 5 seconds until successful.",
      "networkError": "Network connection error. System will automatically retry every 5 seconds until successful.",
      "serverError": "Server experiencing issues. System automatically retries every 5 seconds until successful.",
      "temporaryError": "Temporary Error",
      "analysisError": "Analysis Error",
      "structureAnalysisError": "Structure Analysis Error",
      "calculationError": "Calculation Error",
      "noStructureAnalysis": "No Structure Analysis",
      "noStructureAnalysisDesc": "Please analyze DDL structure first.",
      "retryHint": "You can try again.",
      "switchMethodHint": "If you still encounter errors, try switching to 'Single AI Call' to increase success rate.",
      "switchMethodTitle": "Suggestion"
    },
    "success": {
      "analysisComplete": "Analysis Complete",
      "detailedAnalysisComplete": "Completed detailed analysis with multiple AI calls.",
      "quickAnalysisComplete": "Finished calculating database capacity.",
      "structureAnalysisComplete": "Structure Analysis Complete",
      "structureAnalysisDesc": "Analyzed {{tableCount}} tables with {{fieldCount}} fields. You can review and edit before calculation.",
      "calculationComplete": "Calculation Complete",
      "threeStepComplete": "Completed 3-step capacity analysis with high precision.",
      "loadedFromHistory": "Loaded from History",
      "loadedFromHistoryDesc": "Loaded data from: {{title}}",
      "copied": "Copied",
      "copiedDesc": "{{format}} content has been copied to clipboard."
    },
    "results": {
      "title": "Capacity Analysis Report",
      "description": "Record size and total capacity estimation",
      "recordSizeAnalysis": {
        "title": "Record Size Analysis",
        "averageSize": "Average Size",
        "maximumSize": "Maximum Size"
      },
      "totalCapacity": {
        "title": "Total Capacity Estimation ({{recordCount}} records)",
        "averageCase": "Average Case",
        "maximumCase": "Maximum Case"
      },
      "indexSize": {
        "title": "Estimated Index Size"
      },
      "totalWithIndex": {
        "title": "Total Capacity (including indexes)",
        "averageCase": "Average Case",
        "maximumCase": "Maximum Case"
      },
      "tableBreakdown": {
        "title": "Table Breakdown",
        "recordSizeAverage": "Average Record Size",
        "recordSizeMaximum": "Maximum Record Size",
        "capacityAverage": "Average Capacity",
        "capacityMaximum": "Maximum Capacity",
        "recordCount": "{{count}} records"
      },
      "overhead": {
        "title": "Row Overhead Analysis",
        "nullBitmap": "Null Bitmap",
        "rowHeader": "Row Header",
        "alignment": "Alignment",
        "totalOverhead": "Total Overhead"
      },
      "fieldDetails": {
        "title": "Field Details",
        "averageSize": "Avg",
        "maximumSize": "Max",
        "overhead": "Overhead"
      },
      "recommendations": {
        "title": "Optimization Recommendations"
      },
      "noResult": {
        "title": "Enter DDL schema for AI automatic analysis",
        "description": "System will calculate average and maximum record sizes, then estimate total database capacity"
      },
      "errorDisplay": {
        "title": "Analysis Error"
      }
    },
    "fieldAnalysisReport": {
      "title": "Detailed Field Analysis Report",
      "description": "Detailed capacity analysis, storage efficiency and optimization recommendations for each field",
      "summary": {
        "totalDataSize": "Total Data Size",
        "totalOverhead": "Total Overhead",
        "storageEfficiency": "Storage Efficiency"
      },
      "tableHeaders": {
        "field": "Field",
        "dataType": "Data Type",
        "averageSize": "Average Size",
        "maximumSize": "Maximum Size",
        "overhead": "Overhead",
        "overheadPercent": "% Overhead",
        "nullable": "Nullable",
        "assessment": "Assessment"
      },
      "badges": {
        "highOverhead": "High Overhead",
        "largeField": "Large Field",
        "variableSize": "Variable Size"
      },
      "optimizationRecommendations": {
        "title": "Field Optimization Recommendations",
        "highOverheadRecommendation": "Field \"{{fieldName}}\" has high overhead ({{percent}}%). Consider optimizing data type.",
        "largeSizeRecommendation": "Field \"{{fieldName}}\" has large size ({{size}}). Consider compression or separation.",
        "variableSizeRecommendation": "Field \"{{fieldName}}\" has high size variation. Consider using VARCHAR instead of CHAR.",
        "nullableFieldsRecommendation": "Table has many nullable fields ({{nullableCount}}/{{totalCount}}). Consider reordering columns to optimize null bitmap.",
        "overheadFieldsRecommendation": "{{highOverheadCount}}/{{totalCount}} fields have high overhead. Consider reviewing data types and padding."
      },
      "storageNotes": {
        "title": "Storage Notes"
      },
      "noFieldDetails": {
        "title": "No Field Analysis Details",
        "description": "To see detailed analysis for each field, use \"Multiple AI Calls\" method in configuration.",
        "methodBenefit": "This method will provide detailed information about:",
        "benefits": [
          "Average and maximum size of each field",
          "Overhead analysis and storage efficiency",
          "Optimization recommendations for each field",
          "Nullable and data type statistics"
        ]
      }
    },
    "export": {
      "title": "Export Options",
      "confluence": "Copy Confluence Wiki",
      "summaryTable": "Copy Summary Table",
      "fieldAnalysis": "Copy Field Analysis",
      "detailedReport": "Copy Detailed Field Report",
      "rawJson": "Copy Raw JSON",
      "settings": {
        "title": "Confluence Export Settings",
        "includeFieldDetails": "Include Field Details",
        "includeRecommendations": "Include Recommendations",
        "includeOverheadAnalysis": "Include Overhead Analysis"
      }
    },
    "history": {
      "title": "Capacity Analysis History",
      "description": "Review and reuse previous DDL capacity analyses",
      "itemCount": "{{count}} items",
      "searchPlaceholder": "Search in history...",
      "filterAll": "All",
      "sortNewest": "Newest",
      "sortOldest": "Oldest",
      "export": "Export",
      "clearAll": "Clear All",
      "noHistory": {
        "title": "No capacity analysis history yet",
        "description": "Perform DDL capacity analysis to start building history"
      },
      "noResults": {
        "title": "No matching results found",
        "description": "Try changing search keywords or filters"
      },
      "item": {
        "reload": "Reload",
        "ddlSchema": "DDL Schema:",
        "averageSize": "Average Size",
        "maximumSize": "Maximum Size",
        "totalCapacityAverage": "Total Capacity Avg",
        "totalCapacityMaximum": "Total Capacity Max",
        "ddlLength": "DDL: {{length}} characters",
        "tableCount": "{{count}} tables",
        "fieldCount": "{{count}} fields",
        "recordCount": "{{count}} records",
        "multiCall": "Multiple AI Calls",
        "singleCall": "Single AI Call"
      }
    }
  },
  "wiki": {
    "title": "Wiki Generator",
    "description": "Generate comprehensive Confluence wiki documents with structured markdown format for your projects and features.",
    "projectDescription": "Project/Feature Description",
    "projectDescriptionPlaceholder": "Example: E-commerce order management system with online payment integration, automated inventory management, and real-time analytics reporting...",
    "characterCount": "Character count: {{count}}",
    "formatLabel": "Output Format",
    "selectFormat": "Select output format", 
    "formats": {
      "markdown": {
        "name": "Markdown",
        "description": "Standard markdown format for GitHub, GitLab, etc."
      },
      "confluence": {
        "name": "Confluence Wiki",
        "description": "Confluence wiki markup for Atlassian Confluence"
      }
    },
    "outputLanguageLabel": "Output Language",
    "selectOutputLanguage": "Select output language",
    "outputLanguageDescription": "Choose the language for the generated wiki content. All sections and text will be written in the selected language.",
    "structureLabel": "Document Structure",
    "selectStructure": "Select document structure",
    "structureSections": "Included sections",
    "previewToggle": "Show Structure Preview",
    "previewTitle": "Document Structure Preview",
    "previewDescription": "This shows the structure and sections that will be generated for your selected document type",
    "modelLabel": "Select AI Model",
    "generateButton": "Generate Confluence Wiki Document",
    "generatingText": "Generating wiki document...",
    "resultLabel": "Confluence Wiki Document",
    "copyButton": "Copy",
    "resultDescription": "Wiki document generated with complete markdown format. You can copy and paste directly into Confluence.",
    "previewExample": {
      "projectName": "📚 AI-Powered E-Commerce Platform",
      "tableofcontents": "- [General Summary](#general-summary)\n- [Goals & Scope](#goals--scope)\n- [Architecture](#architecture)\n- [Main Components](#main-components)\n- [Deployment Guide](#deployment-guide)\n- [Usage Guide](#usage-guide)\n- [Related Documents](#related-documents)\n- [Authors & Change History](#authors--change-history)",
      "generalsummary": "This project delivers a comprehensive e-commerce platform with AI-powered recommendations, real-time inventory management, and advanced analytics capabilities. The system integrates payment processing, order management, and customer service automation to provide a seamless shopping experience.",
      "goalsscope": "**Goals:**\n- Implement scalable e-commerce architecture\n- Integrate AI-powered product recommendations\n- Automate inventory and order management\n\n**Scope:**\n- Web and mobile applications\n- Payment gateway integration\n- Analytics dashboard\n\n**Out of Scope:**\n- Physical logistics management\n- Third-party marketplace integration",
      "architecture": "The system follows a microservices architecture pattern with:\n- Frontend: React/Next.js application\n- Backend: Node.js microservices\n- Database: PostgreSQL with Redis caching\n- Message Queue: RabbitMQ for async processing\n- AI Services: Python-based recommendation engine",
      "maincomponents": "**Core Components:**\n1. **User Management Service** - Authentication and user profiles\n2. **Product Catalog Service** - Product information and search\n3. **Order Management Service** - Order processing and fulfillment\n4. **Payment Service** - Payment processing and billing\n5. **AI Recommendation Engine** - Personalized product suggestions\n6. **Analytics Service** - Business intelligence and reporting",
      "deploymentguide": "**Prerequisites:**\n- Docker and Kubernetes cluster\n- PostgreSQL database\n- Redis cache\n\n**Deployment Steps:**\n1. Clone the repository\n2. Configure environment variables\n3. Deploy using Helm charts\n4. Run database migrations\n5. Configure monitoring and alerting",
      "usageguide": "**For Developers:**\n```javascript\n// Example API usage\nconst products = await api.getProducts({\n  category: 'electronics',\n  limit: 10\n});\n```\n\n**For End Users:**\n1. Browse products in the catalog\n2. Add items to cart\n3. Proceed to checkout\n4. Complete payment",
      "relateddocuments": "- [API Documentation](./api-docs.md)\n- [Database Schema](./database-schema.md)\n- [Deployment Runbook](./deployment.md)\n- [User Manual](./user-guide.md)",
      "authorschangehistory": "**Authors:**\n- John Doe - Lead Developer\n- Jane Smith - Product Manager\n\n**Change History:**\n- v1.0.0 - Initial release (2024-01-15)\n- v1.1.0 - Added AI recommendations (2024-02-01)\n- v1.2.0 - Mobile app support (2024-03-01)",
      "overview": "This technical specification outlines the architecture and implementation details for an AI-powered e-commerce platform. The system provides scalable, secure, and efficient online shopping capabilities with advanced AI-driven features.",
      "architecturedesign": "**System Architecture:**\n```\n┌─────────────┐    ┌─────────────┐    ┌─────────────┐\n│   Frontend  │────│   Gateway   │────│  Services   │\n│ React/Next  │    │   (Nginx)   │    │ Microservices│\n└─────────────┘    └─────────────┘    └─────────────┘\n```\n\n**Component Relationships:**\n- API Gateway handles routing and load balancing\n- Microservices communicate via message queues\n- Database per service pattern for data isolation",
      "technicalrequirements": "**Performance Requirements:**\n- Response time: < 200ms for API calls\n- Throughput: 10,000 concurrent users\n- Availability: 99.9% uptime\n\n**Security Requirements:**\n- OAuth 2.0 authentication\n- End-to-end encryption\n- PCI DSS compliance for payments",
      "implementationdetails": "**Technology Stack:**\n- Frontend: React 18, TypeScript, TailwindCSS\n- Backend: Node.js, Express, TypeScript\n- Database: PostgreSQL, Redis\n- Infrastructure: Docker, Kubernetes, AWS\n\n**API Design:**\nRESTful APIs with OpenAPI 3.0 specification",
      "testingstrategy": "**Testing Framework:**\n- Unit Tests: Jest, React Testing Library\n- Integration Tests: Supertest\n- E2E Tests: Cypress\n- Performance Tests: k6\n\n**Coverage Requirements:**\n- Unit tests: >90%\n- Integration tests: Critical paths\n- Security testing: OWASP compliance",
      "deploymentoperations": "**Infrastructure:**\n- Kubernetes cluster on AWS EKS\n- CI/CD: GitHub Actions\n- Monitoring: Prometheus, Grafana\n- Logging: ELK Stack\n\n**Operational Procedures:**\n- Automated deployments via GitOps\n- Blue-green deployment strategy\n- Database backup and recovery",
      "introduction": "Welcome to the AI-Powered E-Commerce Platform! This comprehensive solution provides everything you need to build and manage a modern online store with intelligent features that enhance the shopping experience.",
      "gettingstarted": "**Quick Setup:**\n1. Create your account\n2. Set up your store profile\n3. Add your first products\n4. Configure payment methods\n5. Launch your store!\n\n**What You Need:**\n- Valid business license\n- Bank account for payments\n- Product catalog",
      "featuresoverview": "**🛍️ Core Features:**\n- Product catalog management\n- Shopping cart and checkout\n- Payment processing\n- Order management\n\n**🤖 AI Features:**\n- Personalized recommendations\n- Smart search\n- Inventory optimization\n- Customer insights",
      "stepbysteptutorials": "**Tutorial 1: Adding Your First Product**\n1. Navigate to Products → Add New\n2. Fill in product details\n3. Upload product images\n4. Set pricing and inventory\n5. Publish the product\n\n**Tutorial 2: Setting Up Payments**\n1. Go to Settings → Payments\n2. Connect your payment gateway\n3. Configure tax settings\n4. Test the payment flow",
      "advancedusage": "**Advanced Customization:**\n- Custom themes and branding\n- Advanced analytics and reporting\n- API integrations\n- Custom workflows\n\n**Power User Tips:**\n- Use bulk operations for efficiency\n- Set up automated rules\n- Leverage AI insights for optimization",
      "troubleshooting": "**Common Issues:**\n\n**Q: Products not showing up?**\nA: Check that products are published and inventory is available.\n\n**Q: Payment failures?**\nA: Verify payment gateway configuration and test credentials.\n\n**Q: Slow performance?**\nA: Check your internet connection and clear browser cache.\n\n**Need Help?**\n- Email: support@example.com\n- Live Chat: Available 24/7\n- Documentation: docs.example.com",
      "apioverview": "This API provides comprehensive access to our e-commerce platform functionality. Use it to integrate with external systems, build custom applications, or automate business processes.\n\n**Base URL:** `https://api.example.com/v1`\n**Authentication:** Bearer token required\n**Rate Limit:** 1000 requests per hour",
      "authentication": "**Authentication Methods:**\n- API Key authentication\n- OAuth 2.0 with PKCE\n- JWT tokens\n\n**Example Request:**\n```bash\ncurl -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  https://api.example.com/v1/products\n```",
      "endpointsreference": "**Core Endpoints:**\n\n`GET /products` - List all products\n`POST /products` - Create new product\n`GET /products/{id}` - Get product details\n`PUT /products/{id}` - Update product\n`DELETE /products/{id}` - Delete product\n\n**Request Format:**\n```json\n{\n  \"name\": \"Product Name\",\n  \"price\": 29.99,\n  \"category\": \"electronics\"\n}\n```",
      "codeexamples": "**JavaScript Example:**\n```javascript\nconst response = await fetch('/api/products', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(productData)\n});\n```\n\n**Python Example:**\n```python\nimport requests\n\nresponse = requests.post(\n  'https://api.example.com/v1/products',\n  headers={'Authorization': f'Bearer {token}'},\n  json=product_data\n)\n```",
      "errorhandling": "**Error Response Format:**\n```json\n{\n  \"error\": {\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"Product name is required\",\n    \"details\": {\n      \"field\": \"name\",\n      \"constraint\": \"required\"\n    }\n  }\n}\n```\n\n**Common Error Codes:**\n- 400: Bad Request\n- 401: Unauthorized\n- 403: Forbidden\n- 404: Not Found\n- 429: Rate Limited",
      "changelogversioning": "**API Versions:**\n- v1.0 - Initial release (2024-01-01)\n- v1.1 - Added bulk operations (2024-02-01)\n- v1.2 - Enhanced search capabilities (2024-03-01)\n\n**Breaking Changes:**\n- v1.1: Product creation requires category field\n- v1.2: Search endpoint URL changed\n\n**Migration Guide:**\nUpdate your API calls to include the required category field for product creation.",
      "executivesummary": "**Project Overview:**\nThe AI-Powered E-Commerce Platform represents a strategic investment in digital transformation, delivering a modern, scalable solution that will drive revenue growth and customer engagement.\n\n**Business Impact:**\n- Projected 30% increase in conversion rates\n- 50% reduction in operational costs\n- Enhanced customer satisfaction\n\n**Investment:** $500K over 6 months\n**Expected ROI:** 200% within first year",
      "projectscope": "**Key Deliverables:**\n- Fully functional e-commerce platform\n- Mobile applications (iOS/Android)\n- Admin dashboard\n- Analytics and reporting system\n\n**Success Criteria:**\n- Platform supports 10,000 concurrent users\n- 99.9% uptime achievement\n- Sub-200ms response times\n\n**Constraints:**\n- Budget: $500,000\n- Timeline: 6 months\n- Team size: 8 developers",
      "timelinemilestones": "**Project Timeline:**\n\n**Phase 1 (Months 1-2):** Foundation\n- Infrastructure setup\n- Core backend services\n- Database design\n\n**Phase 2 (Months 3-4):** Development\n- Frontend development\n- API implementation\n- Payment integration\n\n**Phase 3 (Months 5-6):** Launch\n- Testing and QA\n- Performance optimization\n- Production deployment",
      "resourcesbudget": "**Team Structure:**\n- 1 Project Manager\n- 2 Senior Developers\n- 3 Full-stack Developers\n- 1 UI/UX Designer\n- 1 DevOps Engineer\n\n**Budget Breakdown:**\n- Development: $350K (70%)\n- Infrastructure: $75K (15%)\n- Design & UX: $50K (10%)\n- Contingency: $25K (5%)",
      "successmetrics": "**Key Performance Indicators:**\n- User adoption: 1000+ registered users in month 1\n- Revenue: $100K+ monthly recurring revenue\n- Performance: <200ms average response time\n- Quality: <1% error rate\n\n**Measurement Methods:**\n- Google Analytics for user metrics\n- Application monitoring tools\n- Customer satisfaction surveys\n- Financial reporting dashboards",
      "quickstart": "**Get up and running in 5 minutes:**\n\n1. Clone the repository\n2. Install dependencies: `npm install`\n3. Set up environment variables\n4. Run: `npm start`\n\n**First Example:**\n```bash\n# Start the development server\nnpm run dev\n\n# Your app is now running at http://localhost:3000\n```",
      "keyfeatures": "**⭐ Main Features:**\n- Fast setup and deployment\n- Built-in AI capabilities\n- Scalable architecture\n- Modern UI/UX\n\n**Benefits:**\n- Reduce development time by 60%\n- Built-in best practices\n- Enterprise-ready security\n- Community support",
      "nextsteps": "**Continue Learning:**\n- [Complete Documentation](./docs/)\n- [Advanced Tutorials](./tutorials/)\n- [API Reference](./api/)\n- [Community Forum](./community/)\n\n**Get Support:**\n- GitHub Issues\n- Discord Community\n- Stack Overflow\n- Professional Support"
    },
    "success": {
      "generated": "Wiki generated successfully!",
      "generatedDesc": "Created Confluence wiki document for: {{input}}"
    },
    "errors": {
      "missingInfo": "Missing Information",
      "missingDescription": "Please enter project description to generate wiki document.",
      "apiKeyWarning": "API Key not configured",
      "apiKeyWarningDesc": "Please go to Settings to enter ChatGPT API Key.",
      "generating": "Error generating wiki",
      "unknownError": "Unknown error"
    }
  }
}
